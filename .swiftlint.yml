# SwiftLint Configuration
# Version: 0.54.0

# Rules to disable
disabled_rules:
  - line_length # We'll use a custom length
  - trailing_whitespace # Let Xcode handle this
  - todo # TODOs are acceptable during development

# Rules to enable (opt-in rules)
opt_in_rules:
  - array_init
  - attributes
  - closure_end_indentation
  - closure_spacing
  - collection_alignment
  - contains_over_filter_count
  - contains_over_filter_is_empty
  - contains_over_first_not_nil
  - convenience_type
  - discouraged_object_literal
  - empty_collection_literal
  - empty_count
  - empty_string
  - empty_xctest_method
  - enum_case_associated_values_count
  - explicit_init
  - extension_access_modifier
  - fallthrough
  - fatal_error_message
  - file_header
  - file_name
  - first_where
  - force_unwrapping
  - function_default_parameter_at_end
  - ibinspectable_in_extension
  - identical_operands
  - implicit_return
  - joined_default_parameter
  - last_where
  - legacy_random
  - literal_expression_end_indentation
  - lower_acl_than_parent
  - modifier_order
  - nimble_operator
  - nslocalizedstring_key
  - number_separator
  - object_literal
  - operator_usage_whitespace
  - overridden_super_call
  - override_in_extension
  - pattern_matching_keywords
  - prefer_self_type_over_type_of_self
  - prefer_zero_over_explicit_init
  - prefixed_toplevel_constant
  - prohibited_interface_builder
  - prohibited_super_call
  - quick_discouraged_call
  - quick_discouraged_focused_test
  - quick_discouraged_pending_test
  - reduce_into
  - redundant_nil_coalescing
  - redundant_type_annotation
  - required_enum_case
  - single_test_class
  - sorted_first_last
  - sorted_imports
  - static_operator
  - strong_iboutlet
  - switch_case_on_newline
  - toggle_bool
  - unavailable_function
  - unneeded_parentheses_in_closure_argument
  - unowned_variable_capture
  - untyped_error_in_catch
  - vertical_parameter_alignment_on_call
  - vertical_whitespace_closing_braces
  - vertical_whitespace_opening_braces
  - xct_specific_matcher
  - yoda_condition

# Paths to include/exclude
included:
  - Sources
  - Tests

excluded:
  - Carthage
  - Pods
  - .build
  - DerivedData
  - .swiftpm

# Rule configurations
attributes:
  always_on_same_line:
    - "@IBAction"
    - "@IBOutlet"
    - "@NSManaged"
    - "@objc"

closure_body_length:
  warning: 20
  error: 100

collection_alignment:
  align_colons: true

cyclomatic_complexity:
  warning: 10
  error: 20

file_length:
  warning: 400
  error: 1000

file_name:
  excluded:
    - main.swift
    - LinuxMain.swift
    - TestHelpers.swift
    - shim.swift
    - AutomaticRuleTests.generated.swift

file_header:
  required_pattern: |
                    \/\/
                    \/\/  .*?\.swift
                    \/\/  DailyRoutineApp
                    \/\/
                    \/\/  Created by .* on \d{1,2}\/\d{1,2}\/\d{4}\.
                    \/\/

function_body_length:
  warning: 60
  error: 100

function_parameter_count:
  warning: 5
  error: 8

identifier_name:
  min_length:
    warning: 1
    error: 1
  max_length:
    warning: 40
    error: 60
  excluded:
    - id
    - x
    - y
    - z

large_tuple:
  warning: 2
  error: 3

line_length:
  warning: 120
  error: 200
  ignores_urls: true
  ignores_function_declarations: true
  ignores_comments: true

nesting:
  type_level:
    warning: 3
    error: 6
  function_level:
    warning: 5
    error: 10

number_separator:
  minimum_length: 0

private_over_fileprivate:
  validate_extensions: true

trailing_comma:
  mandatory_comma: true

type_body_length:
  warning: 300
  error: 500

type_name:
  min_length:
    warning: 3
    error: 2
  max_length:
    warning: 40
    error: 50
  excluded:
    - iPhone
    - iPad

variable_name:
  min_length:
    warning: 1
    error: 1
  max_length:
    warning: 40
    error: 60
  excluded:
    - id
    - x
    - y
    - z

vertical_whitespace:
  max_empty_lines: 1

# Custom rules
custom_rules:
  array_constructor:
    name: "Array/Dictionary initializer"
    regex: '[let,var] .+ = (\[.+\]\(\)|\[\:\]\(\))'
    capture_group: 1
    message: "Use explicit type annotation when initializing empty or type-ambiguous arrays and dictionaries"
    severity: warning

  comments_space:
    name: "Space After Comment"
    regex: '(^ *//\w+)'
    message: "There should be a space after //"
    severity: warning

  comments_capitalized_ignore_possible_code:
    name: "Capitalize First Word In Comment"
    regex: '(^ +// +(?!swiftlint)[a-z]+)'
    message: "The first word of a comment should be capitalized"
    severity: warning

  comments_capitalized_find_possible_code:
    name: "Capitalize First Word In Comment"
    regex: '(^ *// +(?!swiftlint)[a-z]+)'
    message: "The first word of a comment should be capitalized"
    severity: warning

  double_space:
    name: "Double space"
    regex: '([a-z,A-Z] \s+)'
    message: "Double space between keywords"
    match_kinds: keyword
    severity: warning

  empty_line_after_guard:
    name: "Empty Line After Guard"
    regex: '(^ *guard[ a-zA-Z0-9=?.\(\),><!]*\{[ a-zA-Z0-9=?.\(\),><!]*\}\n *(?!guard)(?!$))'
    message: "There should be an empty line after a guard"
    severity: warning

  empty_line_after_super:
    name: "Empty Line After Super"
    regex: '(^ *super\.[ a-zA-Z0-9=?.\(\)\{\}:,><!]*\n *(?!(?:\}|return|guard|super)))'
    message: "There should be an empty line after super"
    severity: warning

  multiple_empty_lines:
    name: "Multiple Empty Lines"
    regex: '((?:\s*\n){3,})'
    message: "There are too many line breaks"
    severity: warning

  unnecessary_type:
    name: "Unnecessary Type"
    regex: '[ a-zA-Z0-9]*(?:let|var) [ a-zA-Z0-9]*: ([a-zA-Z0-9]*) = \1'
    message: "Type Definition Not Needed"
    severity: warning